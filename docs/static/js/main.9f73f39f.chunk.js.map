{"version":3,"sources":["images/logo_your_calls.svg","images/tick.svg","components/Header.js","components/Menu.js","components/Form.js","components/Button.js","components/NewCall.js","components/CallHistory.js","services/getDefaultDate.js","components/Modal.js","components/DateFilter.js","components/CompanyFilter.js","components/Filters.js","components/Graphics.js","components/Dashboard.js","assets/monthsYear.js","App.js","services/getData.js","services/getList.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","callsLogo","alt","Component","Menu","NavLink","exact","to","activeClassName","library","add","faSmile","faMeh","faFrown","Form","_this$props","this","props","preventSubmission","getWhoCalls","errorPerson","getRequestedEmployee","getName","getCompany","getPosition","getOtherInfo","getEmail","getPhone","getCallAction","getMessage","errorMessage","deselectOption","selectPersonRequested","redialCheck","callBackCheck","callAgainClass","callBackClass","getInputTone","tone","errorTone","method","onSubmit","onChange","value","concat","onClick","ref","required","htmlFor","aria-label","id","type","placeholder","onKeyUp","nameRequired","companyRequired","checked","name","redialButton","callBack","includes","react_fontawesome_index_es","icon","Button","sendForm","NewCall","react","components_Form","errorIncomingData","errorCallAction","components_Button","CallHistory","item","key","_id","loggedAt","split","reverse","join","personRequested","company","position","otherInfo","email","telephone","message","action","values","_this","map","printRow","actionShowList","results","now","actionFilterDate","moment","format","today","filter","isSame","others","colSpan","actionGetStartDate","actionGetEndDate","printTable","add0","number","Modal","sucess","tick","faChevronDown","DateFilter","dateStart","actionSetFilterStartDate","dateEnd","actionSetFilterEndDate","CompanyFilter","allCompanies","getCompanySelected","companySelected","index","Filters","components_DateFilter","components_CompanyFilter","Graphics","barLoading","index_esm","chartType","width","height","data","barData","options","title","chartArea","stroke","isStacked","orientation","hAxis","titleTextStyle","color","textStyle","minValue","vAxis","legend","alignment","fontSize","fontName","bold","italic","backgroundColor","pieLoading","pieData","slices","top","pieSliceBorderColor","pieSliceTextStyle","Dashboard","components_Filters","startDate","endDate","components_Graphics","monthsYear","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","React","createRef","wholeList","state","info","addedBy","succesMessage","dateValues","pieDataLoadingStatus","pieChartData","barDataLoadingStatus","dataBarsTransformed","barChartData","chartDataBars","bind","assertThisInitialized","sendInfo","isEmptyOrNot","showList","getStartDate","getEndDate","filterDate","setFilterStartDate","setFilterEndDate","fetchChartPie","getCompaniesData","dates","date","Date","toLocaleDateString","setMonth","getMonth","_arrayEndDate$map","_arrayEndDate$map2","slicedToArray","actualDay","actualMonth","actualYear","newEndDate","_arrayStartDate$map","_arrayStartDate$map2","startDay","startMonth","startYear","currentTime","setState","prevState","objectSpread","nextProp","nextState","fetchChartBar","_this2","URL","toLowerCase","fetch","then","response","json","rateCurrencyNames","rateCurrencyValues","chartData","i","length","push","_this3","sort","b","month","transformDataBars","dataToTransform","clients","keys","find","client","titleArray","allMonth","monthData","_i","_clients","e","currentTarget","event","newInfo","preventDefault","body","JSON","stringify","cache","headers","content-type","getData","console","log","catch","error","incomingInfo","sendSlackInfo","optionsArray","current","getElementsByTagName","label","disabled","style","display","makeMessage","process","REACT_APP_SKEY","settings","url","Content-Type","_this4","userQuery","arrayDate","newDate","userStartDate","userEndDate","momentStartDate","momentEndDate","filteredResults","isBetween","_this5","companiesArray","ind","array","indexOf","_this6","_this$state$dateValue","_this$state","components_Header","components_Menu","Switch","Route","path","render","components_NewCall","components_CallHistory","components_Dashboard","components_Modal","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9f73f39f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_your_calls.e60bb3ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.cd8bfaed.svg\";","import React, { Component } from 'react';\nimport callsLogo from '../images/logo_your_calls.svg';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <div className=\"header__logo\">\n          <h1 className=\"logo\">Interacso</h1>\n        </div>\n        <div className=\"header__appLogo\">\n          <img src={callsLogo} className=\"your-calls\" alt=\"Your Calls\"/>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  callsLogo: PropTypes.string\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nclass Menu extends Component {\n  render() {\n    return (\n      <nav className=\"menu\">\n        <div className=\"menu__container\">\n          <div className=\"menu__newCall\">\n            <NavLink \n              exact to=\"/\" \n              className=\"new-call__link\" \n              activeClassName=\"is-active\"\n            >\n                <p className=\"newCall__title\">\n                  Nueva Llamada\n                </p>\n            </NavLink>\n          </div>\n          <div>\n            <NavLink to=\"/callHistory\" className=\"call-back__link\" activeClassName=\"is-active\"><p className=\"historic__title\">Histórico</p></NavLink>\n          </div>\n          <NavLink \n              exact to=\"/dashboard\" \n              className=\"new-call__link\" \n              activeClassName=\"is-active\"\n            >\n                <p className=\"stadistics__title\">\n                  Estadísticas\n                </p>\n            </NavLink>\n        </div>\n      </nav>\n    );\n  }\n}\n\nMenu.propTypes = {\n  plus: PropTypes.string\n}\n\nexport default Menu;\n\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n//For using awesome fonts directly\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSmile, faMeh, faFrown } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faSmile,faMeh, faFrown);\n\n\nclass Form extends Component {\n  render() {\n    const {\n      preventSubmission,\n      getWhoCalls,\n      errorPerson,\n      getRequestedEmployee,\n      getName,\n      getCompany,\n      getPosition,\n      getOtherInfo,\n      getEmail,\n      getPhone,\n      getCallAction,\n      getMessage,\n      errorMessage,\n      deselectOption,\n      selectPersonRequested,\n      redialCheck,\n      callBackCheck,\n      callAgainClass,\n      callBackClass,\n      getInputTone,\n      tone,\n      errorTone, \n    } = this.props;\n\n    return (\n      <form\n        method=\"post\"\n        onSubmit={preventSubmission}\n        className=\"registration__form\"\n      >\n        <fieldset className=\"form-section addedBy\">\n          <div className=\"formUp\">\n            <div className=\"main__addedBy\">\n              <h2 className=\"main__addedBy--title\">\n                ¿Quién atendió la llamada?\n              </h2>\n              <select className=\"main__employees\" onChange={getWhoCalls}>\n                <option value=\"Elige un empleado\">Elige un empleado</option>\n                <option value=\"Alex\">Alex</option>\n                <option value=\"Bea\">Bea</option>\n                <option value=\"Chuck\">Chuck</option>\n                <option value=\"Isma\">Isma</option>\n                <option value=\"Juan\">Juan</option>\n                <option value=\"Lily\">Lily</option>\n                <option value=\"Natalia\">Natalia</option>\n                <option value=\"Paula\">Paula</option>\n                <option value=\"Sera\">Sera</option>\n              </select>\n              <p className={`error-msg-employee ${errorPerson}`}>\n                Debes seleccionar un empleado\n              </p>\n            </div>\n            <div className=\"main__personRequested\">\n              <h2 className=\"main__personRequested-title\">\n                ¿Por quién preguntaban?\n              </h2>\n              <select\n                className=\"main__employees\"\n                onChange={getRequestedEmployee}\n                onClick={deselectOption}\n                ref={selectPersonRequested}\n                required\n              >\n                <option className=\"option\" value=\"Elige un empleado\">\n                  Elige un empleado\n                </option>\n                <option value=\"Alex\">Alex</option>\n                <option value=\"Bea\">Bea</option>\n                <option value=\"Chuck\">Chuck</option>\n                <option value=\"Isma\">Isma</option>\n                <option value=\"Juan\">Juan</option>\n                <option value=\"Lily\">Lily</option>\n                <option value=\"Natalia\">Natalia</option>\n                <option value=\"Paula\">Paula</option>\n                <option value=\"Sera\">Sera</option>\n              </select>\n              <p className={`error-msg-employee ${errorPerson}`}>\n                Debes seleccionar un empleado\n              </p>\n            </div>\n          </div>\n        </fieldset>\n        <div className=\"incoming-data__container\">\n          <fieldset className=\"form-section incoming-data\">\n            <h2 className=\"incoming-data__title\">¿Quién llamó?</h2>\n            <div className=\"incoming-data__fieldsContainer\">\n              <div className=\"incoming-data__name\">\n                <label\n                  htmlFor=\"name\"\n                  className=\"incoming-data__name--label label\"\n                  aria-label=\"nombre\"\n                >\n                  Nombre\n                </label>\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  className=\"incoming-data__name--input incoming-data__input\"\n                  placeholder=\"Nombre\"\n                  onKeyUp={getName}\n                />\n                <p className={`error-msg ${this.props.nameRequired }`}>El campo nombre es obligatorio</p>\n              </div>\n              <div className=\"incoming-data__company\">\n                <label\n                  htmlFor=\"company\"\n                  className=\"incoming-data__company--label label\"\n                  aria-label=\"empresa\"\n                >\n                  Empresa\n                </label>\n                <input\n                  id=\"company\"\n                  type=\"text\"\n                  className=\"incoming-data__company--input incoming-data__input\"\n                  placeholder=\"Empresa\"\n                  onKeyUp={getCompany}\n                />\n                 <p className={`error-msg ${this.props.companyRequired }`}>El campo empresa es obligatorio</p>\n              </div>\n              <div className=\"incoming-data__position\">\n                <label\n                  htmlFor=\"position\"\n                  className=\"incoming-data__position--label label\"\n                  aria-label=\"cargo\"\n                >\n                  Cargo\n                </label>\n                <input\n                  id=\"position\"\n                  type=\"text\"\n                  className=\"incoming-data__position--input incoming-data__input\"\n                  placeholder=\"Cargo\"\n                  onKeyUp={getPosition}\n                />\n              </div>\n              <div className=\"incoming-data__other-info\">\n                <label\n                  htmlFor=\"other-info\"\n                  className=\"incoming-data__other-info--label label\"\n                  aria-label=\"otro detalle\"\n                >\n                  Otro detalle\n                </label>\n                <input\n                  id=\"other-info\"\n                  type=\"text\"\n                  className=\"incoming-data__other-info--input incoming-data__input\"\n                  placeholder=\"Otro detalle\"\n                  onKeyUp={getOtherInfo}\n                />\n              </div>\n              <div className=\"incoming-data__email\">\n                <label\n                  htmlFor=\"email\"\n                  className=\"incoming-data__email--label label\"\n                  aria-label=\"email\"\n                >\n                  Email\n                </label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  className=\"incoming-data__email--input incoming-data__input\"\n                  placeholder=\"Email\"\n                  onKeyUp={getEmail}\n                />\n              </div>\n              <div className=\"incoming-data__mobile\">\n                <label\n                  htmlFor=\"mobile\"\n                  className=\"incoming-data__mobile--label label\"\n                  aria-label=\"teléfono\"\n                >\n                  Teléfono\n                </label>\n                <input\n                  id=\"mobile\"\n                  type=\"tel\"\n                  className=\"incoming-data__mobile--input incoming-data__input\"\n                  placeholder=\"Teléfono\"\n                  onKeyUp={getPhone}\n                />\n              </div>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-section message\">\n            <h2 className=\"message__title\">¿Qué mensaje dejó?</h2>\n            <div className=\"call-container__wrapper\">\n              <div className=\"call-container__radios\">\n                <div className=\"call__container\">\n                  <label\n                    htmlFor=\"redial\"\n                    className={`callAction_selection label fake-redial-button ${callAgainClass}`}\n                  >\n                    Llamará de nuevo\n                    <input\n                      id=\"redial\"\n                      type=\"checkbox\"\n                      checked={redialCheck}\n                      value=\"Llamará de nuevo\"\n                      className=\"callAction__selection--redial\"\n                      placeholder=\"Llamará de nuevo\"\n                      name=\"call\"\n                      onChange={getCallAction}\n                      ref={this.redialButton}\n                    />\n                  </label>\n                </div>\n                <div className=\"call__container\">\n                  <label\n                    htmlFor=\"call-back\"\n                    className={`callAction_selection label fake-CallBack-button ${callBackClass}`}\n                  >\n                    Devolver la llamada\n                    <input\n                      id=\"call-back\"\n                      type=\"checkbox\"\n                      checked={callBackCheck}\n                      value=\"Devolver la llamada\"\n                      className=\"callAction__selection--call-back\"\n                      placeholder=\"Devolver la llamada\"\n                      name=\"call\"\n                      onChange={getCallAction}\n                      ref={this.callBack}\n                    />\n                  </label>\n                </div>\n              </div>\n              <div className=\"message_container\">\n                <label htmlFor=\"message\" className=\"message__label label\">\n                  Mensaje personalizado\n                </label>\n                <textarea\n                  name=\"message\"\n                  id=\"message\"\n                  className=\"message__input\"\n                  placeholder=\"Mensaje personalizado\"\n                  onKeyUp={getMessage}\n                />\n                <p className={`error-msg-textarea ${errorMessage}`}>\n                  Debes rellenar el campo del mensaje.\n                </p>\n              </div>\n            </div>\n          </fieldset>\n        </div>\n        <fieldset className=\"form-section tone\">\n\n            <legend className=\"form__tone-title\">¿Cómo fue el clima de la llamada?</legend>\n            <div className=\"form__tone-container\">\n            <label htmlFor=\"good\" className={tone.includes(\"good\") ? \"tone__label selectedClass\" : \"tone__label\"}>\n            <FontAwesomeIcon icon=\"smile\" className=\"icon\"/>\n              Genial\n            </label>\n            <input\n              className=\"tone__input\"\n              type=\"radio\"\n              name=\"tone\"\n              id=\"good\"\n              value=\"good\"\n              checked={tone.includes(\"good\")}\n              onChange={getInputTone}\n              required\n            />\n\n            <label htmlFor=\"neutral\" className={tone.includes(\"neutral\") ? \"tone__label selectedClass\" : \"tone__label\"}>\n            <FontAwesomeIcon icon=\"meh\" className=\"icon\"/>\n              Meh\n            </label>\n            <input\n              className=\"tone__input\"\n              type=\"radio\"\n              name=\"tone\"\n              id=\"neutral\"\n              value=\"neutral\"\n              checked={tone.includes(\"neutral\")}\n              onChange={getInputTone}\n              required\n            />\n\n            <label htmlFor=\"bad\" className={tone.includes(\"bad\") ? \"tone__label selectedClass\" : \"tone__label\"}>\n            <FontAwesomeIcon icon=\"frown\" className=\"icon\"/>\n              Bad\n            </label>\n            <input\n              className=\"tone__input\"\n              type=\"radio\"\n              name=\"tone\"\n              id=\"bad\"\n              value=\"bad\"\n              checked={tone.includes(\"bad\")}\n              onChange={getInputTone}\n              required\n            />\n            <p className={`error-msg-tone ${errorTone}`}>\n              Debes seleccionar un estado.\n            </p>\n            </div>\n          </fieldset>\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  preventSubmission: PropTypes.func.isRequired,\n  getWhoCalls: PropTypes.func.isRequired,\n  errorPerson: PropTypes.string.isRequired,\n  getRequestedEmployee: PropTypes.func.isRequired,\n  errorIncomingData: PropTypes.string.isRequired,\n  getName: PropTypes.func.isRequired,\n  getCompany: PropTypes.func.isRequired,\n  getPosition: PropTypes.func.isRequired,\n  getOtherInfo: PropTypes.func.isRequired,\n  getEmail: PropTypes.func.isRequired,\n  getPhone: PropTypes.func.isRequired,\n  getCallAction: PropTypes.func.isRequired,\n  getMessage: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string.isRequired,\n  deselectOption: PropTypes.func.isRequired,\n  redialCheck: PropTypes.bool.isRequired,\n  callBackCheck: PropTypes.bool.isRequired,\n  callAgainClass: PropTypes.string.isRequired,\n  callBackClass: PropTypes.string.isRequired,\n  errorTone: PropTypes.string.isRequired,\n  tone: PropTypes.string.isRequired, \n  getInputTone: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Button extends Component {\n  render() {\n    return(\n      <div className=\"button-register\">\n        <input type=\"submit\" className=\"register\" value=\"Registrar\" onClick={this.props.sendForm}/>\n      </div>\n    );\n  }\n}\n\nButton.propTypes = {\n  sendForm: PropTypes.func.isRequired\n}\n\nexport default Button;\n\n","import React, { Component, Fragment } from \"react\";\nimport Form from \"./Form\";\nimport Button from \"./Button\";\n\nclass NewCall extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Form\n          preventSubmission={this.props.preventSubmission}\n          getWhoCalls={this.props.getWhoCalls}\n          errorPerson={this.props.errorPerson}\n          getRequestedEmployee={this.props.getRequestedEmployee}\n          errorIncomingData={this.props.errorIncomingData}\n          getName={this.props.getName}\n          getCompany={this.props.getCompany}\n          getPosition={this.props.getPosition}\n          getOtherInfo={this.props.getOtherInfo}\n          getEmail={this.props.getEmail}\n          getPhone={this.props.getPhone}\n          errorCallAction={this.props.errorCallAction}\n          getCallAction={this.props.getCallAction}\n          getMessage={this.props.getMessage}\n          errorMessage={this.props.errorMessage}\n          deselectOption={this.props.deselectOption}\n          selectPersonRequested={this.props.selectPersonRequested}\n          callBackClass={this.props.callBackClass}\n          callAgainClass={this.props.callAgainClass}\n          redialCheck={this.props.redialCheck}\n          callBackCheck={this.props.callBackCheck}\n          getInputTone={this.props.getInputTone}\n          tone={this.props.tone}\n          errorTone={this.props.errorTone}\n          nameRequired={this.props.nameRequired} \n          companyRequired = {this.props.companyRequired}\n        />\n        <Button \n        sendForm={this.props.sendForm}\n      \n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default NewCall;\n","import React, { Component } from 'react';\nimport * as moment from 'moment';\nimport PropTypes from 'prop-types';\n\nclass CallHistory extends Component {\n  printRow(item) {\n    return (\n      <tr className=\"list__item\" key={item._id}>\n        <td>\n          <p className=\"date__day\">\n            {item.loggedAt\n              .split('T')[0]\n              .split('-')\n              .reverse()\n              .join('/')}\n          </p>\n          <p className=\"hour\">{item.loggedAt.split('T')[1].split('', 5)}h</p>\n        </td>\n        <td>\n          <p className=\"askfor\">{item.personRequested}</p>\n        </td>\n        <td>\n          <p className=\"name\">{item.name}</p>\n        </td>\n        <td>\n          <p className=\"company\">{item.company}</p>\n        </td>\n        <td>\n          <p className=\"position\">{item.position}</p>\n        </td>\n        <td>\n          <p className=\"otherinfo\">\n            {item.otherInfo}\n            {item.email}\n            {item.telephone}\n          </p>\n        </td>\n        <td>\n          <p className=\"message\">{item.message}</p>\n          <p className=\"action\">{item.action}</p>\n        </td>\n      </tr>\n    );\n  }\n\n  printTable(values) {\n    return values.map(item => this.printRow(item));\n  }\n\n  componentDidMount() {\n    this.props.actionShowList();\n  }\n\n  render() {\n    const { results, actionFilterDate } = this.props;\n    const now = moment().format('YYYY-MM-DD');\n\n    const today = results.filter(item => {\n      const loggedTime = moment(item.loggedAt, 'YYYY-MM-DD');\n      return loggedTime.isSame(now);\n    });\n\n    const others = results.filter(item => {\n      const loggedTime = moment(item.loggedAt, 'YYYY-MM-DD');\n      return !loggedTime.isSame(now);\n    });\n\n    return (\n      <div className=\"wrapper__callHistory\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <th className=\"table__title title__date cell\">Fecha/hora</th>\n              <th className=\"table__title title__questions cell\">\n                Preguntaron por\n              </th>\n              <th className=\"table__title cell\" colSpan=\"4\">\n                Llamó\n              </th>\n              <th className=\"table__title cell\">Mensaje</th>\n            </tr>\n            <tr>\n              <th colSpan=\"2\" className=\"cell table__date\">\n                <div className=\"main__subtitle--date-container-history\">\n                  <div className=\"dateStart\">\n                    <label htmlFor=\"dateStart\" />\n                    <input\n                      id=\"dateStart\"\n                      type=\"date\"\n                      className=\"input-date\"\n                      placeholder=\"Desde: 26/02/1991\"\n                      onChange={this.props.actionGetStartDate}\n                    />\n                  </div>\n                  <div className=\"dateEnd\">\n                    <label htmlFor=\"dateEnd\" />\n                    <input\n                      id=\"dateEnd\"\n                      type=\"date\"\n                      className=\"input-date\"\n                      placeholder=\"Hasta: 26/03/2019\"\n                      onChange={this.props.actionGetEndDate}\n                    />\n                  </div>\n                </div>\n              </th>\n              <th className=\"cell\">Nombre</th>\n              <th className=\"cell\">Empresa</th>\n              <th className=\"cell\">Cargo / detalles / contacto</th>\n              <th className=\"cell\" colSpan=\"2\">\n                Detalle\n              </th>\n            </tr>\n            {this.printTable(today)}\n\n            <tr>\n              <th colSpan=\"7\">Ayer y Anteriores</th>\n            </tr>\n\n            {this.printTable(others)}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nCallHistory.propTypes = {\n  actionShowList: PropTypes.func.isRequired,\n  results: PropTypes.array,\n  actionFilterDate: PropTypes.func.isRequired,\n  actionGetStartDate: PropTypes.func.isRequired,\n  actionGetEndDate: PropTypes.func.isRequired\n};\n\nexport default CallHistory;\n","const currentTime = () => {\n  let date = new Date();\n  const endDate = date.toLocaleDateString()\n  date.setMonth(date.getMonth() - 1);\n  const startDate= date.toLocaleDateString();\n\n  const arrayEndDate = endDate.split(\"/\");\n  const [actualDay, actualMonth, actualYear] = arrayEndDate.map(item=>add0(item));\n  const newEndDate = `${actualYear}-${actualMonth}-${actualDay}`;\n\n  const arrayStartDate = startDate.split(\"/\");\n  const [startDay, startMonth, startYear] = arrayStartDate.map(item=>add0(item));\n  const newStartDate = `${startYear}-${startMonth}-${startDay}`;\n\n  return([endDate, startDate, newStartDate, newEndDate])\n};\n\nfunction add0(number){\n return number<10? `0${number}`: number;\n}\n\nexport { currentTime };","import React, {Component} from \"react\";\nimport tick from '../images/tick.svg';\n\nclass Modal extends Component {\n  render() {\n    return (\n      <div className={`modal ${this.props.sucess}`}> <img src={tick}alt=\"tick\" className=\"tick\"></img>La llamada a {this.props.personRequested} se ha registrado correctamente y ya se ha notificado.</div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/DateFilter.scss';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faChevronDown);\n\nclass DateFilter extends Component {\n  render() {\n    return (\n      <fieldset className=\"dateFilterContainer\">\n        <legend className=\"dateFilterLegend\">Rango de fecha</legend>\n        <div className=\"main__subtitle--date-container\">\n          <div className=\"dateStart\">\n            <label htmlFor=\"dateStart\" />\n            <input\n              id=\"dateStart\"\n              value={this.props.dateStart}\n              type=\"date\"\n              className=\"input-date\"\n              onChange={this.props.actionSetFilterStartDate}\n            />\n          </div>\n          <div className=\"dateEnd\">\n            <label htmlFor=\"dateEnd\" />\n            <input\n              id=\"dateEnd\"\n              value={this.props.dateEnd}\n              type=\"date\"\n              className=\"input-date\"\n              onChange={this.props.actionSetFilterEndDate}\n            />\n          </div>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nDateFilter.propTypes = {\n  actionSetFilterStartDate: PropTypes.func.isRequired,\n  actionSetFilterEndDate: PropTypes.func.isRequired,\n  dateStart: PropTypes.string,\n  dateEnd: PropTypes.string\n};\n\nexport default DateFilter;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/CompanyFilter.scss';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faChevronDown);\n\nclass CompanyFilter extends Component {\n  render() {\n    const { allCompanies, getCompanySelected, companySelected } = this.props;\n\n    return (\n      <fieldset className=\"companyFilterContainer\">\n        <legend className=\"companyFilterLegend\">Cliente</legend>\n        <label className=\"companyFilterLabel\">Filtro por cliente</label>\n        <div className=\"selectContainer\">\n          <select\n            className=\"companySelect\"\n            id=\"company\"\n            name=\"company\"\n            value={companySelected}\n            onChange={getCompanySelected}\n          >\n            <option value=\"\">Elige una compañia</option>\n            {allCompanies.map((item, index) => {\n              return (\n                <option key={index + 1} value={item}>\n                  {item}\n                </option>\n              );\n            })}\n          </select>\n          <FontAwesomeIcon icon=\"chevron-down\" className=\"faChevronDown\" />\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nCompanyFilter.propTypes = {\n  allCompanies: PropTypes.arrayOf(PropTypes.string),\n  getCompanySelecte: PropTypes.func,\n  companySelected: PropTypes.string\n};\n\nexport default CompanyFilter;\n","import React, { Component } from 'react';\nimport DateFilter from './DateFilter';\nimport CompanyFilter from './CompanyFilter';\nimport PropTypes from 'prop-types';\nimport '../styles/Filters.scss';\n\nclass Filters extends Component {\n  render() {\n    return (\n      <form className=\"filtersForm\">\n        <DateFilter\n          actionSetFilterStartDate={this.props.actionSetFilterStartDate}\n          actionSetFilterEndDate={this.props.actionSetFilterEndDate}\n          dateStart={this.props.dateStart}\n          dateEnd={this.props.dateEnd}\n        />\n        <CompanyFilter \n          allCompanies={this.props.allCompanies}\n          getCompanySelected={this.props.getCompanySelected}\n          companySelected={this.props.companySelected}\n        />\n      </form>\n    );\n  }\n}\n\nFilters.propTypes = {\n    actionSetFilterStartDate: PropTypes.func,\n    actionSetFilterEndDate: PropTypes.func,\n    dateStart: PropTypes.string,\n    dateEnd: PropTypes.string,\n    allCompanies: PropTypes.arrayOf(PropTypes.string),\n    getCompanySelecte: PropTypes.func,\n    companySelected: PropTypes.string,\n};\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport Chart from 'react-google-charts';\nimport '../styles/Graphics.scss';\nimport PropTypes from 'prop-types';\n\nclass Graphics extends Component {\n  render() {\n    return (\n      <section className=\"charts-container\">\n        {this.props.barLoading === 'ready' ? (\n          <Chart\n            chartType=\"BarChart\"\n            width={'550px'}\n            height={'300px'}\n            data={this.props.barData}\n            options={{\n              title: 'Llamadas totales',\n              chartArea: {\n                width: '50%',\n                stroke: '#1C1C1C'\n              },\n              isStacked: true,\n              orientation: 'horizontal',\n              hAxis: {\n                title: 'Mes',\n                titleTextStyle: {\n                  color: '#fff'\n                },\n                textStyle: {\n                  color: '#fff'\n                },\n                minValue: 0\n              },\n              vAxis: {\n                title: 'Número de llamadas',\n                titleTextStyle: {\n                  color: '#fff'\n                },\n              },\n              legend: {\n                position: 'top',\n                alignment: 'start',\n                textStyle: {\n                  color: '#fff',\n                  fontSize: 14,\n                  fontName: 'Arial',\n                  bold: false,\n                  italic: false\n                }\n              },\n\n              backgroundColor: '#1C1C1C',\n              titleTextStyle: {\n                color: 'white',\n                fontSize: 20,\n                bold: true\n              }\n            }}\n          />\n        ) : (\n          <div>Fetching data from API</div>\n        )}\n\n        {this.props.pieLoading === 'ready' ? (\n          <Chart\n            chartType=\"PieChart\"\n          width={'550px'}\n            height={'300px'}\n            data={this.props.pieData}\n            options={{\n              slices: [\n                {\n                  color: '#58C155'\n                },\n                {\n                  color: '#F5C167'\n                },\n                {\n                  color: '#EE8268'\n                }\n              ],\n              chartArea: {\n                top: '50',\n                width: '50%',\n                height: '80%',\n                stroke: '#1C1C1C'\n              },\n              legend: {\n                textStyle: {\n                  color: '#9E9D9E',\n                  fontSize: 14\n                }\n              },\n              backgroundColor: '#1C1C1C',\n              pieSliceBorderColor: '#1C1C1C',\n              pieSliceTextStyle: {\n                color: '#1C1C1C',\n                bold: true\n              },\n              title: 'Humor de las llamadas',\n              titleTextStyle: {\n                color: 'white',\n                fontSize: 20\n              }\n            }}\n          />\n        ) : (\n          <div>Fetching data from API</div>\n        )}\n      </section>\n    );\n  }\n}\n\nGraphics.propTypes = {\n  pieData: PropTypes.arrayOf(PropTypes.array),\n  pieLoading: PropTypes.string.isRequired,\n  barData: PropTypes.arrayOf(PropTypes.array),\n  barLoading: PropTypes.string.isRequired\n};\n\nexport default Graphics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from './Filters';\nimport Graphics from './Graphics';\nimport '../styles/Dashboard.scss';\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"dashboardContainer\">\n        <Filters\n          actionSetFilterStartDate={this.props.actionSetFilterStartDate}\n          actionSetFilterEndDate={this.props.actionSetFilterEndDate}\n          dateStart={this.props.startDate}\n          dateEnd={this.props.endDate}\n          allCompanies={this.props.allCompanies}\n          getCompanySelected={this.props.getCompanySelected}\n          companySelected={this.props.companySelected}\n        />\n        <Graphics\n          pieData={this.props.pieData}\n          pieLoading={this.props.pieLoading}\n          barData={this.props.barData}\n          barLoading={this.props.barLoading}\n        />\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  pieData: PropTypes.arrayOf(PropTypes.array),\n  pieLoading: PropTypes.string.isRequired,\n  barData: PropTypes.arrayOf(PropTypes.array),\n  barLoading: PropTypes.string.isRequired,\n  actionSetFilterStartDate: PropTypes.func.isRequired,\n  actionSetFilterEndDate: PropTypes.func.isRequired,\n  dateStart: PropTypes.string,\n  dateEnd: PropTypes.string,\n  allCompanies: PropTypes.arrayOf(PropTypes.string),\n  getCompanySelecte: PropTypes.func,\n  companySelected: PropTypes.string\n};\n\nexport default Dashboard;\n","\n\nconst monthsYear = [\n\t'Enero',\n\t'Febrero',\n\t'Marzo',\n\t'Abril',\n\t'Mayo',\n\t'Junio',\n\t'Julio',\n\t'Agosto',\n\t'Septiembre',\n\t'Noviembre',\n\t'Diciembre'\n];\n\nexport default monthsYear;","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Menu from \"./components/Menu\";\nimport NewCall from \"./components/NewCall\";\nimport CallHistory from \"./components/CallHistory\";\nimport { getData } from \"./services/getData\";\nimport { getList } from \"./services/getList\";\nimport { currentTime } from \"./services/getDefaultDate\";\nimport \"./styles/App.scss\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Modal from \"./components/Modal\";\nimport * as moment from \"moment\";\nimport Dashboard from \"./components/Dashboard\";\nimport monthsYear from \"./assets/monthsYear\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectPersonRequested = React.createRef();\n    this.wholeList = [];\n\n    this.state = {\n      info: {\n        addedBy: \"\",\n        personRequested: \"\",\n        name: \"\",\n        company: \"\",\n        position: \"\",\n        otherInfo: \"\",\n        email: \"\",\n        telephone: 0,\n        action: \"\",\n        message: \"\",\n        tone: \"\"\n      },\n\n      errorTone: \"hidden\",\n      errorIncomingData: \"hidden\",\n      errorCallAction: \"hidden\",\n      errorPerson: \"hidden\",\n      succesMessage: \"hidden\",\n      errorMessage: \"hidden\",\n      callAgainClass: \"\",\n      callBackClass: \"\",\n      redialCheck: false,\n      callBackCheck: false,\n\n      results: [],\n      startDate: \"\",\n      endDate: \"\",\n      dateValues: {\n        dateEnd: \"\",\n        dateStart: \"\"\n      },\n      filter: {\n        dateStart: \"\",\n        dateEnd: \"\",\n        companySelected: \"\"\n      },\n      pieDataLoadingStatus: \"loading\",\n      pieChartData: [],\n\n      nameRequired: \"hidden\",\n      companyRequired: \"hidden\",\n      \n\n      barDataLoadingStatus: \"loading\",\n      dataBarsTransformed: [],\n      \n      barChartData: [],\n      chartDataBars: [],\n\n      allCompanies: []\n    };\n\n    this.getWhoCalls = this.getWhoCalls.bind(this);\n    this.getRequestedEmployee = this.getRequestedEmployee.bind(this);\n    this.getName = this.getName.bind(this);\n    this.getCompany = this.getCompany.bind(this);\n    this.getPosition = this.getPosition.bind(this);\n    this.getOtherInfo = this.getOtherInfo.bind(this);\n    this.getEmail = this.getEmail.bind(this);\n    this.getPhone = this.getPhone.bind(this);\n    this.getCallAction = this.getCallAction.bind(this);\n    this.getMessage = this.getMessage.bind(this);\n    this.sendInfo = this.sendInfo.bind(this);\n    this.isEmptyOrNot = this.isEmptyOrNot.bind(this);\n    this.sendForm = this.sendForm.bind(this);\n    this.deselectOption = this.deselectOption.bind(this);\n    this.showList = this.showList.bind(this);\n    this.getStartDate = this.getStartDate.bind(this);\n    this.getEndDate = this.getEndDate.bind(this);\n    this.filterDate = this.filterDate.bind(this);\n    this.getInputTone = this.getInputTone.bind(this);\n    this.setFilterStartDate = this.setFilterStartDate.bind(this);\n    this.setFilterEndDate = this.setFilterEndDate.bind(this);\n    this.fetchChartPie = this.fetchChartPie.bind(this);\n    this.getCompanySelected = this.getCompanySelected.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCompaniesData();\n    if (!this.state.filter.dateEnd && !this.state.filter.dateStart) {\n      const dates = currentTime();\n      this.setState(prevState => {\n        return {\n          dateValues: {\n            dateEnd: dates[3],\n            dateStart: dates[2]\n          },\n          filter: {\n            ...prevState.filter,\n            dateStart: dates[1],\n            dateEnd: dates[0]\n          }\n        };\n      });\n    }\n  }\n\n  componentDidUpdate(nextProp, nextState) {\n    if (this.state.filter !== nextState.filter) {\n      this.fetchChartPie(\n        this.state.filter.dateStart,\n        this.state.filter.dateEnd,\n        this.state.filter.companySelected\n      );\n      this.fetchChartBar(\n        this.state.filter.dateStart,\n        this.state.filter.dateEnd,\n        this.state.filter.companySelected\n      );\n    }\n  }\n\n  fetchChartPie(startDate, endDate, companySelected) {\n    const URL = `https://adalab.interacso.com/api/graph/pie?from=${startDate}&to=${endDate}&company=${companySelected.toLowerCase()}`;\n    return fetch(URL)\n      .then(response => response.json())\n      .then(data => {\n        const rateCurrencyNames = [\"Genial\", \"Meh\", \"Mal\"];\n        const rateCurrencyValues = Object.values(data);\n        const chartData = [[\"Call mood\", \"Quantity\"]];\n        for (let i = 0; i < rateCurrencyNames.length; i += 1) {\n          chartData.push([rateCurrencyNames[i], rateCurrencyValues[i]]);\n        }\n        this.setState({\n          pieDataLoadingStatus: \"ready\",\n          pieChartData: chartData\n        });\n      });\n  }\n\n  fetchChartBar(startDate, endDate, companySelected) {\n    const URL = `https://adalab.interacso.com/api/graph/bar?from=${startDate}&to=${endDate}&company=${companySelected.toLowerCase()}`;\n    return fetch(URL)\n      .then(response => response.json())\n      .then(data => {\n        return this.setState(\n          {\n            barDataLoadingStatus: \"ready\",\n            dataBarsTransformed: data.sort((a,b) => a.month - b.month).map((item, index) => {\n              //Modify the key month with a word instead of a number\n              return {\n                ...item,\n                month: monthsYear[data[index].month]\n              };\n            })\n          },\n          () => this.transformDataBars(this.state.dataBarsTransformed)\n        );\n      });\n  }\n\n  transformDataBars(dataToTransform) {\n    let chartDataBars = [];\n    const chartTitle = [\"Meses\"];\n    let clients = [];\n    dataToTransform.map(item => {\n      const keys = Object.keys(item);\n      return keys.map(key => {\n        return (\n          clients.find(client => client === key) ||\n          key === \"year\" ||\n          key === \"month\" ||\n          clients.push(key)\n        );\n      });\n    });\n    const titleArray = chartTitle.concat(clients);\n\n    let allMonth = [];\n    const values = dataToTransform.map(item => {\n      let monthData = [item.month];\n      for (const client of clients) {\n        item[client] ? monthData.push(item[client]) : monthData.push(0);\n      }\n      allMonth.push(monthData);\n    });\n\n    chartDataBars= [titleArray, ...allMonth]\n    this.setState({\n      chartDataBars: chartDataBars\n    });\n  }\n\n  getInputTone(e) {\n    const { value } = e.currentTarget;\n    this.setState(prevState => {\n      return {\n        info: {\n          ...prevState.info,\n          tone: value\n        }\n      };\n    });\n  }\n\n  getWhoCalls(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, addedBy: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getRequestedEmployee(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, personRequested: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getName(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, name: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getCompany(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, company: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getPosition(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, position: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getOtherInfo(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, otherInfo: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getEmail(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, email: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getPhone(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, telephone: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  getCallAction(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, action: event.currentTarget.value };\n    let state = {\n      info: newInfo,\n      callAgainClass: \"\",\n      callBackClass: \"\",\n      redialCheck: false,\n      callBackCheck: false\n    };\n\n    if (event.currentTarget.id === \"redial\") {\n      if (!this.state.redialCheck) {\n        state = {\n          info: newInfo,\n          callAgainClass: \"selectedClass\",\n          callBackClass: \"\",\n          redialCheck: true,\n          callBackCheck: false\n        };\n      }\n    } else {\n      if (!this.state.callBackCheck) {\n        state = {\n          info: newInfo,\n          callAgainClass: \"\",\n          callBackClass: \"selectedClass\",\n          redialCheck: false,\n          callBackCheck: true\n        };\n      }\n    }\n    this.setState(state);\n  }\n\n  getMessage(event) {\n    const { info } = this.state;\n    const newInfo = { ...info, message: event.currentTarget.value };\n    this.setState({ info: newInfo });\n  }\n\n  preventSubmission(event) {\n    event.preventDefault();\n  }\n\n  sendInfo() {\n    const info = this.state.info;\n    getData(info)\n      .then(response => console.log(\"Success:\", JSON.stringify(response)))\n      .then(\n        this.setState({\n          succesMessage: \"\"\n        })\n      )\n      .catch(error => console.error(\"Error:\", error));\n  }\n\n  sendForm(event) {\n    event.preventDefault();\n    this.isEmptyOrNot();\n  }\n\n  isEmptyOrNot() {\n    const incomingInfo = this.state.info;\n    if (incomingInfo.personRequested === \"\") {\n      this.setState({\n        errorPerson: \"\"\n      });\n    } else if (incomingInfo.message === \"\") {\n      this.setState({\n        errorIncomingData: \"hidden\",\n        errorCallAction: \"\",\n        errorPerson: \"hidden\",\n        errorMessage: \"\"\n      });\n    } else if (incomingInfo.tone === \"\") {\n      this.setState({\n        errorIncomingData: \"hidden\",\n        errorCallAction: \"hidden\",\n        errorPerson: \"hidden\",\n        errorMessage: \"hidden\",\n        errorTone: \"\"\n      });\n    } else if (incomingInfo.name === \"\") {\n      this.setState({\n        errorIncomingData: \"hidden\",\n        errorCallAction: \"hidden\",\n        errorPerson: \"hidden\",\n        errorMessage: \"hidden\",\n        errorTone: \"hidden\",\n        nameRequired:'',\n      });\n    } else if (incomingInfo.company === \"\") {\n      this.setState({\n        errorIncomingData: \"hidden\",\n        errorCallAction: \"hidden\",\n        errorPerson: \"hidden\",\n        errorMessage: \"hidden\",\n        errorTone: \"hidden\",\n        companyRequired: '',\n      });\n    } else {\n      this.setState({\n        errorIncomingData: \"hidden\",\n        errorCallAction: \"hidden\",\n        errorPerson: \"hidden\",\n        errorMessage: \"hidden\",\n        errorTone: \"hidden\",\n        nameRequired:\"hidden\",\n        companyRequired:\"hidden\"\n      });\n      this.sendInfo();\n      this.sendSlackInfo();\n    }\n  }\n\n  deselectOption() {\n    const addedBy = this.state.info.addedBy;\n\n    if (addedBy !== \"\") {\n      const optionsArray = this.selectPersonRequested.current.getElementsByTagName(\n        \"option\"\n      );\n\n      for (let i = 0; i < optionsArray.length; i++) {\n        if (optionsArray[i].label.includes(addedBy)) {\n          optionsArray[i].disabled = true;\n          optionsArray[i].style.display = \"none\";\n        } else {\n          optionsArray[i].disabled = false;\n          optionsArray[i].style.display = \"block\";\n        }\n      }\n    }\n  }\n\n  makeMessage() {\n    let message = `*${\n      this.state.info.personRequested\n    }*, te acaban de llamar y te han dejado el siguiente mensaje: \\n*${\n      this.state.info.action\n    } \\n${this.state.info.message}*`;\n\n    if (\n      (this.state.info.name !== \"\" ||\n        this.state.info.position !== \"\" ||\n        this.state.info.company !== \"\" ||\n        this.state.info.otherInfo !== \"\" ||\n        this.state.info.email !== \"\") &&\n      this.state.info.telephone === 0\n    ) {\n      return (message = `*${\n        this.state.info.personRequested\n      }*, te acaba de llamar: \\n*${this.state.info.name} \\n${\n        this.state.info.position\n      } \\n${this.state.info.company}  \\n${this.state.info.email} \\n${\n        this.state.info.otherInfo\n      }* \\nSu mensaje ha sido: \\n*${this.state.info.action} \\n${\n        this.state.info.message\n      }*`);\n    } else if (\n      this.state.info.name !== \"\" ||\n      this.state.info.position !== \"\" ||\n      this.state.info.company !== \"\" ||\n      this.state.info.otherInfo !== \"\" ||\n      this.state.info.email !== \"\" ||\n      this.state.info.telephone !== 0\n    ) {\n      return (message = `*${\n        this.state.info.personRequested\n      }*, te acaba de llamar: \\n*${this.state.info.name} \\n${\n        this.state.info.position\n      } \\n${this.state.info.company} \\n${this.state.info.telephone} \\n${\n        this.state.info.email\n      } \\n${this.state.info.otherInfo}* \\nSu mensaje ha sido: \\n*${\n        this.state.info.action\n      } \\n${this.state.info.message}*`);\n    } else {\n      return message;\n    }\n  }\n\n  sendSlackInfo() {\n    const message = this.makeMessage();\n    const key = process.env.REACT_APP_SKEY;\n\n    const settings = {\n      url: `https://slack.com/api/chat.postMessage?token=${key}&channel=%23your-calls-app&text=${message}&pretty=1`,\n      method: \"POST\",\n      body: {}\n    };\n\n    fetch(settings.url, {\n      method: settings.method,\n      body: JSON.stringify(settings.body),\n      cache: \"no-cache\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(response => console.log(\"Success:\", JSON.stringify(response)))\n      .catch(error => console.error(\"Error:\", error));\n  }\n\n  showList() {\n    getList().then(results => {\n      this.setState({\n        results: results\n      });\n      this.wholeList = results;\n    });\n  }\n\n  getStartDate(e) {\n    const userQuery = e.currentTarget.value;\n    this.setState({\n      startDate: userQuery\n    });\n  }\n\n  setFilterStartDate(e) {\n    const userQuery = e.currentTarget.value;\n    const arrayDate = userQuery.split(\"-\");\n    const newDate = `${arrayDate[2]}/${arrayDate[1]}/${arrayDate[0]}`;\n    this.setState(prevState => {\n      return {\n        dateValues: {\n          ...prevState,\n          dateStart: userQuery\n        },\n        filter: {\n          ...prevState.filter,\n          dateStart: newDate\n        }\n      };\n    });\n  }\n\n  setFilterEndDate(e) {\n    const userQuery = e.currentTarget.value;\n    const arrayDate = userQuery.split(\"-\");\n    const newDate = `${arrayDate[2]}/${arrayDate[1]}/${arrayDate[0]}`;\n    this.setState(prevState => {\n      return {\n        dateValues: {\n          ...prevState,\n          dateStart: userQuery\n        },\n        filter: {\n          ...prevState.filter,\n          dateEnd: newDate\n        }\n      };\n    });\n  }\n\n  getEndDate(e) {\n    const userQuery = e.currentTarget.value;\n    this.setState({\n      endDate: userQuery\n    });\n  }\n\n  filterDate() {\n    const userStartDate = this.state.startDate;\n    const userEndDate = this.state.endDate;\n    const results = this.wholeList;\n\n    const momentStartDate = moment(userStartDate, \"YYYY-MM-DD\");\n    const momentEndDate = moment(userEndDate, \"YYYY-MM-DD\");\n\n    const filteredResults = results.filter(item => {\n      let date = item.loggedAt;\n      let momentDate = moment(date, \"YYYY-MM-DD\");\n      return momentDate.isBetween(momentStartDate, momentEndDate, null, \"[]\");\n    });\n\n    this.setState({\n      results: filteredResults\n    });\n  }\n\n  getCompaniesData() {\n    const ENDPOINT = \"https://adalab.interacso.com/api/call\";\n\n    fetch(ENDPOINT, {\n      method: \"GET\",\n      cache: \"no-cache\",\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .then(data => {\n        const companiesArray = data\n          .map(item => {\n            return item.company;\n          })\n          .filter((item, ind, array) => array.indexOf(item) === ind);\n\n        this.setState({\n          allCompanies: companiesArray\n        });\n      });\n  }\n\n  getCompanySelected(event) {\n    const value = event.currentTarget.value;\n    this.setState(prevState => {\n      return {\n        filter: {\n          ...prevState.filter,\n          companySelected: value\n        }\n      };\n    });\n  }\n\n  render() {\n    const { tone } = this.state.info;\n    const { dateStart, dateEnd } = this.state.dateValues;\n    const { companySelected } = this.state.filter;\n    const {\n      errorPerson,\n      errorTone,\n      errorIncomingData,\n      errorCallAction,\n      errorMessage,\n      callBackClass,\n      callAgainClass,\n      redialCheck,\n      callBackCheck,\n      results,\n      pieChartData,\n      pieDataLoadingStatus,\n      succesMessage,\n      personRequested,\n      nameRequired,\n      companyRequired,\n      allCompanies\n    } = this.state;\n    const {\n      preventSubmission,\n      getWhoCalls,\n      getRequestedEmployee,\n      getName,\n      getCompany,\n      getPosition,\n      getOtherInfo,\n      getEmail,\n      getPhone,\n      getCallAction,\n      getMessage,\n      sendForm,\n      deselectOption,\n      selectPersonRequested,\n      getInputTone,\n      showList,\n      getStartDate,\n      getEndDate,\n      filterDate,\n      setFilterStartDate,\n      setFilterEndDate,\n      getCompanySelected\n    } = this;\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <main className=\"main\">\n          <div className=\"form__wrapper\">\n            <Menu />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <NewCall\n                    preventSubmission={preventSubmission}\n                    getWhoCalls={getWhoCalls}\n                    errorPerson={errorPerson}\n                    getRequestedEmployee={getRequestedEmployee}\n                    errorIncomingData={errorIncomingData}\n                    getName={getName}\n                    getCompany={getCompany}\n                    getPosition={getPosition}\n                    getOtherInfo={getOtherInfo}\n                    getEmail={getEmail}\n                    getPhone={getPhone}\n                    errorCallAction={errorCallAction}\n                    getCallAction={getCallAction}\n                    getMessage={getMessage}\n                    errorMessage={errorMessage}\n                    sendForm={sendForm}\n                    deselectOption={deselectOption}\n                    selectPersonRequested={selectPersonRequested}\n                    callBackClass={callBackClass}\n                    callAgainClass={callAgainClass}\n                    redialCheck={redialCheck}\n                    callBackCheck={callBackCheck}\n                    getInputTone={getInputTone}\n                    tone={tone}\n                    errorTone={errorTone}\n                    nameRequired={nameRequired}\n                    companyRequired={companyRequired}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n          <div className=\"main__wrapper--callHistory\">\n            <Switch>\n              <Route\n                path=\"/callHistory\"\n                render={() => (\n                  <CallHistory\n                    actionShowList={showList}\n                    results={results}\n                    actionGetStartDate={getStartDate}\n                    actionGetEndDate={getEndDate}\n                    actionFilterDate={filterDate}\n                  />\n                )}\n              />\n\n              <Route\n                path=\"/dashboard\"\n                render={() => (\n                  <Dashboard\n                    actionSetFilterStartDate={setFilterStartDate}\n                    actionSetFilterEndDate={setFilterEndDate}\n                    actionFilterDate={this.filterDate}\n                    startDate={dateStart}\n                    endDate={dateEnd}\n                    pieData={pieChartData}\n                    pieLoading={pieDataLoadingStatus}\n                    barData={this.state.chartDataBars}\n                    barLoading={this.state.barDataLoadingStatus}\n                    allCompanies={allCompanies}\n                    getCompanySelected={getCompanySelected}\n                    companySelected={companySelected}\n                  />\n                )}\n              />\n            </Switch>\n          </div>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <Modal sucess={succesMessage} personRequested={personRequested} />\n            )}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://adalab.interacso.com/api/call';\n\nconst getData = (info) => fetch(ENDPOINT, {\n  method: \"POST\",\n  body: JSON.stringify(info),\n  cache: \"no-cache\",\n  headers: {\n    \"content-type\": \"application/json\"\n  }\n})\n.then(response => response.json());\n\nexport { getData };\n","const ENDPOINT = 'https://adalab.interacso.com/api/call';\n\nconst getList = () =>\n  fetch(ENDPOINT, {\n    method: 'GET',\n    cache: 'no-cache',\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(response => response.json());\n\nexport { getList };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}